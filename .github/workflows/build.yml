# .github/workflows/build.yml
name: Symfony Build Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read



jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallofw clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@v3
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}



  symfony-tests:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - uses: actions/checkout@v4

      - name: Set up test environment
        run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

      # Cache Composer dependencies
      - name: Cache Composer dependencies
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      # Install Composer dependencies
      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      # Prepare the SQLite database for tests
      - name: Create SQLite Database
        run: |
          mkdir -p data
          touch data/database.sqlite

      # Run PHPUnit tests
      - name: Run PHPUnit tests
        env:
          DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
        run: vendor/bin/phpunit

      # Clean up after tests
      - name: Clean up test environment
        run: rm -rf data/database.sqlite

