name: Staging Deployment

on:
  workflow_run:
    workflows: ["PHP Build Pipeline"] # Assure-toi que le nom correspond au nom du workflow de build
    types:
      - completed

jobs:
  staging_deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1' # Choisis la version de PHP appropriée
          tools: composer

      - name: Install dependencies
        run: composer install --no-dev --optimize-autoloader

      - name: Run migrations
        run: php artisan migrate --force # ou une commande adaptée à ton projet

      - name: Clear cache
        run: php artisan cache:clear

      - name: Deploy to Staging Server
        # env:
        #   SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        #   SERVER_HOST: ${{ secrets.STAGING_SERVER_HOST }}
        #   DEPLOY_PATH: ${{ secrets.STAGING_DEPLOY_PATH }}
        run: |
          echo "Déploiement en cours sur le serveur de staging..."
          # Commande pour copier les fichiers et déployer (rsync, scp, ou ssh)
          # ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY user@$SERVER_HOST "cd $DEPLOY_PATH && git pull origin main && composer install --no-dev --optimize-autoloader && php artisan migrate --force && php artisan cache:clear"
          echo "Déploiement en staging réussi !"
